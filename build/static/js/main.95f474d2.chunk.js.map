{"version":3,"sources":["components/Search.js","components/Form.js","components/Display.js","components/Notification.js","services/phonebook.js","App.js","index.js"],"names":["Search","filter","handleFilterChange","value","onChange","Form","addPerson","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","type","Display","persons","deletePerson","map","person","name","number","onClick","id","Notification","notification","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","baseUrl","newObject","axios","post","then","response","data","get","delete","object","put","App","useState","setPersons","setNewName","setNewNumber","setFilter","setNotification","useEffect","personService","initialPersons","personsToShow","toUpperCase","search","event","target","preventDefault","existingPersonID","findIndex","e","updatedPerson","date","Date","window","confirm","returnedPerson","console","log","setTimeout","catch","error","some","alert","newPerson","concat","personToDelete","ReactDOM","render","notes","document","getElementById"],"mappings":"wJAWeA,EAVA,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,mBAErB,OACI,oDAEI,uBAAOC,MAAOF,EAAQG,SAAUF,QCW7BG,EAfF,SAAC,GAA2E,IAA1EC,EAAyE,EAAzEA,UAAWC,EAA8D,EAA9DA,QAASC,EAAqD,EAArDA,UAAWC,EAA0C,EAA1CA,iBAAkBC,EAAwB,EAAxBA,mBAE5D,OACI,uBAAMC,SAAUL,EAAhB,UACI,yCACU,uBAAOH,MAAOI,EAASH,SAAUK,OAE3C,2CACY,uBAAON,MAAOK,EAAWJ,SAAUM,OAE/C,wBAAQE,KAAK,SAAb,qBCKGC,EAfC,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,aACvB,OACI,gCACI,yCAEID,EAAQE,KAAI,SAACC,GAAD,OACZ,gCAAwBA,EAAOC,KAA/B,IAAsCD,EAAOE,OAC7C,wBAAQC,QAAS,WAAOL,EAAaE,EAAOI,KAA5C,sBADUJ,EAAOC,aC+BlBI,EArCM,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAmBnB,OAA0B,OAAvBA,EAAaC,QACL,KAEiB,YAApBD,EAAaX,KAEb,qBAAKa,MAvBQ,CACjBC,MAAO,QACPC,WAAY,YACZC,SAAU,GACVC,YAAa,QACbC,aAAc,EACdC,QAAS,GACTC,aAAc,IAgBV,SACKT,EAAaC,UAKtB,qBAAKC,MApBU,CACfC,MAAO,MACPC,WAAY,YACZC,SAAU,GACVC,YAAa,QACbC,aAAc,EACdC,QAAS,GACTC,aAAc,IAad,SACKT,EAAaC,W,gBChCpBS,EAAU,oCAqBD,EAnBA,SAAAC,GAEb,OADgBC,IAAMC,KAAKH,EAASC,GACrBG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAiB5B,EAdA,WAEb,OADgBJ,IAAMK,IAAIP,GACXI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAY5B,EATM,SAAClB,GAEpB,OADgBc,IAAMM,OAAN,UAAgBR,EAAhB,YAA2BZ,IAC5BgB,MAAK,SAAAC,GAAQ,OAAEA,EAASC,SAO1B,EAJA,SAACG,EAAOrB,GAErB,OADgBc,IAAMQ,IAAN,UAAaV,EAAb,YAAwBZ,GAAKqB,GAC9BL,MAAK,SAAAC,GAAQ,OAAEA,EAASC,SC4F1BK,EA1GH,WAAO,IAAD,EACeC,mBAAS,IADxB,mBACR/B,EADQ,KACCgC,EADD,OAEgBD,mBAAS,cAFzB,mBAERtC,EAFQ,KAECwC,EAFD,OAGoBF,mBAAS,gBAH7B,mBAGRrC,EAHQ,KAGGwC,EAHH,OAIcH,mBAAS,IAJvB,mBAIR5C,EAJQ,KAIAgD,EAJA,OAK0BJ,mBAAS,CAACrB,QAAQ,KAAKZ,KAAK,OALtD,mBAKRW,EALQ,KAKM2B,EALN,KAOhBC,qBAAU,WACRC,IAEGf,MAAK,SAAAgB,GACJP,EAAWO,QAEf,IACF,IAAMC,EAAgBxC,EAAQb,QAAO,SAAAgB,GAAM,OAA8D,IAA5DA,EAAOC,KAAKqC,cAAcC,OAAOvD,EAAOsD,kBAgFrF,OACE,gCACE,2CACA,cAAC,EAAD,CAAchC,aAAcA,IAC5B,cAAC,EAAD,CAAQtB,OAAQA,EAAQC,mBAlFF,SAACuD,GACzBR,EAAUQ,EAAMC,OAAOvD,UAkFrB,iDACA,cAAC,EAAD,CAAMG,UAxEQ,SAACmD,GACjBA,EAAME,iBACN,IAAIC,EAAmB9C,EAAQ+C,WAAU,SAAAC,GAAC,OAAIA,EAAE5C,OAASX,KACzD,IAAyB,IAAtBqD,EAAwB,CACzB,IAAMG,EAAgB,CACpB7C,KAAKX,EACLY,OAAOX,EACPwD,KAAM,IAAIC,MAETC,OAAOC,QAAP,UAAkBJ,EAAc7C,KAAhC,kFACHkC,EACQW,EAAcH,EAAiB,GACtCvB,MAAK,SAAA+B,GACJC,QAAQC,IAAI,mBACZxB,EAAWhC,EAAQE,KAAI,SAAAC,GAAM,OAAIA,EAAOI,KAAOuC,EAAmB3C,EAASmD,MAC3ElB,EAAgB,CAAC1B,QAAO,kBAAc4C,EAAelD,MAAQN,KAAM,YACnE2D,YAAW,WACTrB,EAAgB,CAAC1B,QAAQ,KAAKZ,KAAK,SACnC,QAEH4D,OAAM,SAAAC,GACLJ,QAAQC,IAAI,oBACZpB,EAAgB,CAAC1B,QAAO,yBAAqBuC,EAAc7C,KAAnC,6CAAoFN,KAAO,UACnH2D,YAAW,WACTrB,EAAgB,CAAC1B,QAAQ,KAAKZ,KAAK,SACnC,KACFkC,EAAWhC,EAAQb,QAAO,SAAAgB,GAAM,OAAIA,EAAOI,KAAOuC,EAAiB,SAErEb,EAAW,IACXC,EAAc,UAGX,GAAGlC,EAAQ4D,MAAK,SAAAZ,GAAC,OAAIA,EAAE3C,SAAWX,KACrC0D,OAAOS,MAAP,UAAgBnE,EAAhB,uCAEE,CACF,IAAMoE,EAAY,CAChB1D,KAAKX,EACLY,OAAOX,EACPwD,KAAM,IAAIC,MAEZb,EACUwB,GACPvC,MAAK,SAAA+B,GACJtB,EAAWhC,EAAQ+D,OAAOT,IAC1BlB,EAAgB,CAAC1B,QAAO,gBAAY4C,EAAelD,MAAQN,KAAO,YAClE2D,YAAW,WACTrB,EAAgB,CAAC1B,QAAQ,KAAKZ,KAAK,SACnC,QAENmC,EAAW,IACXC,EAAc,MAqBczC,QAASA,EAASC,UAAWA,EAAWC,iBAhF/C,SAACgD,GACxBV,EAAWU,EAAMC,OAAOvD,QA+EkFO,mBA5EjF,SAAC+C,GAC1BT,EAAaS,EAAMC,OAAOvD,UA4ExB,cAAC,EAAD,CAASW,QAAWwC,EAAevC,aAlBlB,SAACM,GACpB,IAAIyD,EAAiBhE,EAAQb,QAAO,SAAAgB,GAAM,OAAIA,EAAOI,KAAOA,KACxD6C,OAAOC,QAAQ,UAAYW,EAAe,GAAG5D,KAAO,OACtDkC,EACc/B,GACbgB,MAAM,WACLS,EAAWhC,EAAQb,QAAO,SAAAgB,GAAM,OAAIA,EAAOI,KAAOA,gBC3F1D0D,IAASC,OACP,cAAC,EAAD,CAAKC,OAAK,IACVC,SAASC,eAAe,W","file":"static/js/main.95f474d2.chunk.js","sourcesContent":["import React from 'react'\nconst Search = ({filter, handleFilterChange}) => {\n\n    return(\n        <div>\n            filter shown with\n            <input value={filter} onChange={handleFilterChange}/>\n        </div>\n    )\n\n}\nexport default Search","import React from 'react'\n\nconst Form = ({addPerson, newName, newNumber, handleNameChange, handleNumberChange}) => {\n    \n    return(\n        <form onSubmit={addPerson}>\n            <div>\n                name: <input value={newName} onChange={handleNameChange}/>\n            </div>\n            <div>\n                number: <input value={newNumber} onChange={handleNumberChange}/>\n            </div>\n            <button type=\"submit\">add</button>\n        </form>\n    )\n}\n\nexport default Form","import React from 'react'\n\nconst Display = ({persons, deletePerson}) => {\n    return(\n        <div>\n            <h2>Numbers</h2>\n            {\n                persons.map((person) => \n                <div key={person.name}>{person.name} {person.number}\n                <button onClick={() => {deletePerson(person.id)}}>delete</button>\n                </div>\n                )\n            }\n        </div>\n    )\n}\n\nexport default Display","import React from 'react'\n\nconst Notification = ({notification}) => {\n    const styleSuccess = {\n        color: 'green',\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10,\n    }\n    const styleError = {\n        color: 'red',\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10,\n    }\n    if(notification.message===null){\n        return null\n    }\n    else if(notification.type==='success'){\n        return(\n            <div style={styleSuccess}>\n                {notification.message}\n            </div>\n        )\n    }\n    return(\n        <div style={styleError}>\n            {notification.message}\n        </div>\n    )\n    \n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/persons'\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst deleteObject = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response=>response.data)\n}\n\nconst update = (object,id) => {\n  const request = axios.put(`${baseUrl}/${id}`,object)\n  return request.then(response=>response.data)\n}\nexport default { create, getAll , deleteObject, update}","import React, { useState, useEffect } from 'react'\nimport Search from './components/Search'\nimport Form from './components/Form'\nimport Display from './components/Display'\nimport Notification from './components/Notification'\nimport personService from './services/phonebook.js'\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('Enter name')\n  const [ newNumber, setNewNumber ] = useState('Enter number')\n  const [ filter, setFilter ] = useState('')\n  const [ notification, setNotification ] = useState({message:null,type:null})\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  },[])\n  const personsToShow = persons.filter(person=>person.name.toUpperCase().search(filter.toUpperCase()) !== -1)\n  \n  const handleFilterChange= (event) => {\n    setFilter(event.target.value)\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  \n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    let existingPersonID = persons.findIndex(e => e.name === newName)\n    if(existingPersonID !== -1){\n      const updatedPerson = {\n        name:newName,\n        number:newNumber,\n        date: new Date()\n      }\n      if(window.confirm(`${updatedPerson.name} is already added to the Phonebook. Replace the old number with a new one ?`)){\n      personService\n      .update(updatedPerson,existingPersonID+1)\n      .then(returnedPerson => {\n        console.log('then data block')\n        setPersons(persons.map(person => person.id !== existingPersonID ? person : returnedPerson))\n        setNotification({message : `Updated ${returnedPerson.name}`, type: 'success'})\n        setTimeout(() => {\n          setNotification({message:null,type:null})\n        },5000)\n      })\n      .catch(error => {\n        console.log('catch data block')\n        setNotification({message : `Information of ${updatedPerson.name} has already been removed from the server`, type : 'error'})\n        setTimeout(() => {\n          setNotification({message:null,type:null})\n        },5000)\n        setPersons(persons.filter(person => person.id !== existingPersonID+1))\n      })\n      setNewName('')\n      setNewNumber ('')\n      }\n    }\n    else if(persons.some(e => e.number === newNumber)){\n      window.alert(`${newNumber} is already added to phonebook`)\n    }\n    else{\n      const newPerson = {\n        name:newName,\n        number:newNumber,\n        date: new Date()\n      }\n      personService\n        .create(newPerson)   \n        .then(returnedPerson => {       \n          setPersons(persons.concat(returnedPerson))\n          setNotification({message : `Added ${returnedPerson.name}`, type : 'success'})\n          setTimeout(() => {\n            setNotification({message:null,type:null})\n          },5000)\n        })\n      setNewName('')\n      setNewNumber ('')\n    }\n  }\n  \n  const deletePerson = (id) => {\n    let personToDelete = persons.filter(person => person.id === id)\n    if (window.confirm(\"Delete \" + personToDelete[0].name + \" ?\")) {\n      personService\n      .deleteObject(id)\n      .then( ()=>{\n        setPersons(persons.filter(person => person.id !== id))\n      })\n    }\n  }\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification}/>\n      <Search filter={filter} handleFilterChange={handleFilterChange}/>\n      <h2>Add a new entry</h2>\n      <Form addPerson={addPerson} newName={newName} newNumber={newNumber} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} />\n      <Display persons = {personsToShow} deletePerson={deletePerson}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App notes/>,\n  document.getElementById('root')\n)"],"sourceRoot":""}